@import 'tailwindcss';

@theme {
  --color-border: hsl(var(--border));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));
  --color-card: hsl(var(--card));
  --animate-fade-in-delay: fade-in 700ms ease-out forwards; 
}
  @layer base {
    :root {
      --background: white;
      --foreground: rgba(129, 140, 248, 0.8);
      --primary-text-color: black;
      --border: 222 47% 11%;
      --card: 222 47% 11%;
      --primary: rgba(129, 140, 248, 0.8);
      --primary-foreground: white;
      --toggle-bg: rgba(129, 140, 248, 0.8);
      --toggle-fg: rgba(41, 41, 41, 0.911);
      --border: 1px solid rgba(44, 44, 44, 0.63);
    }

    :root.dark {
      --background: #121212;
      --foreground: rgba(129, 140, 248, 0.8);
      --border: black;
      --card: 210 40% 98%;
      --primary-text-color: white;
      --primary: rgba(129, 140, 248, 0.8);
      --primary-foreground: #121212;
      --toggle-bg: rgba(129, 140, 248, 0.8);
      --toggle-fg: rgb(255, 255, 255);
      --border: 1px solid rgb(255, 255, 255);
    }

    * {
      @apply border-border;
    }

    html {
      @apply scroll-smooth;
    }

    body {
      color: var(--primary-text-color); 
      transition: background-color 300ms ease;
    }

  }

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;

  @media (width <= 480px) {
    max-width: 480px;
  }
  @media (480px < width <= 640px) {
    max-width: 640px;
  }
  @media (640px < width <= 768px) {
    max-width: 768px;
  }
  @media (768px < width <= 1024px) {
    max-width: 1024px;
  }
  @media (1024px < width <= 1280px) {
    max-width: 1280px;
  }
}

@utility text-glow {
  @apply relative;
  text-shadow: 0 0 10px rgba(129, 140, 248, 0.8);
}

@utility card-hover {
  @apply transition-transform duration-300 hover:scale-[1.02] hover:shadow-lg;
}

@utility gradient-border {
  @apply relative rounded-md;
  background: linear-gradient(to right, hsl(var(--card)), hsl(var(--card)));
  background-clip: padding-box;
  border-radius: 0.5rem;
  border: 2px solid transparent;
}

@utility button {
  @apply px-6 py-2 rounded-full bg-primary text-primary-foreground font-semibold transition-all duration-200 hover:shadow-[0_0_10px_rgba(139,92,246,0.5)];
  hover:scale-105 active: scale-95;
}

#root {
  max-width: 100%;
  margin: 0 auto;
  padding: 0;
  text-align: center;
  transition: background-color 250ms ease-in-out;
}

.toggle-btn {
  position: absolute;
  top: 2em;
  right: 2em;
}

.toggle {
  visibility: hidden;
}

.toggle + label {
  display: flex;
  align-items: center;
  font-size: 14px;
  cursor: pointer;
  color: var(--primary-text-color);
  transition: background-color 0.3s ease-in-out;

}

.toggle + label::before {
  content: "";
  height: 1em;
  width: 2em;
  border-radius: 1em;
  background-color: var(--toggle-bg);
  margin-right: 0.5em;
  transition: background-color 250ms ease-in-out;
  border: var(--border);
  box-shadow: 0 0 4px rgba(0,0,0,0.2);
}

.toggle + label::after {
  content: "";
  height: 0.8em;
  width: 0.8em;
  border-radius: 1em;
  background-color: var(--toggle-fg);
  position: absolute;
  left: 1.1em;
  transition: transform 0.3s ease-in-out, background-color 0.3s ease-in-out;
}

.toggle:checked + label::after {
  transform: translate(100%);
}

#menu {
  cursor:pointer;
  position: absolute;
  right: 2em;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

html, body {
  transition: background-color 400ms ease ease-in-out, color 200ms;
}

.toggle + label:hover::before {
  background-color: rgba(129, 140, 248, 0.5)
}

* {
  transition: background-color 300ms ease;
}

.scale-transition {
  transition: transform 400ms;
}

.scale-transition:hover {
  transform: scale(1.08);
  
}

.light-card {
  @apply bg-gray-50 hover:bg-gray-200 text-gray-800 shadow-md border border-gray-200;
}

.dark-card {
  @apply bg-neutral-800 hover:bg-neutral-700 text-white border border-gray-500;
}

.light-card-projects {
  @apply bg-gray-50 hover:bg-gray-200 text-gray-800 shadow-md border border-gray-200;
}

.dark-card-projects {
  @apply bg-neutral-800 hover:bg-neutral-700 text-white border border-gray-500;
}

.light-card-experience {
  @apply text-gray-800;
}

.dark-card-experience {
  @apply text-white;
}

.dark-projects-skills {
  @apply text-white bg-indigo-900/80 border border-gray-600
}

.light-projects-skills {
  @apply text-black bg-indigo-100 border border-gray-300
}

/* Chatbot container */
.chatbot-light {
  @apply bg-gray-100 border border-gray-300;
}

.chatbot-dark {
  @apply bg-neutral-800 border border-gray-700;
}

/* Header */
.chatbot-header-light {
  @apply bg-gray-300 text-gray-900 border-b border-gray-300;
}

.chatbot-header-dark {
  @apply bg-neutral-900 text-white border-b border-gray-700;
}

/* Messages */
.chatbot-message-user-light {
  @apply bg-indigo-100 text-black;
}

.chatbot-message-user-dark {
  @apply bg-indigo-700 text-white;
}

.chatbot-message-bot-light {
  @apply bg-gray-200 text-black;
}

.chatbot-message-bot-dark {
  @apply bg-gray-600 text-white;
}

/* Prompt buttons */
.chatbot-prompt-light {
  @apply bg-gray-200 border border-neutral-400 text-black hover:bg-gray-300;
}

.chatbot-prompt-dark {
  @apply bg-gray-700 text-white hover:bg-gray-600;
}

/* Input */
.chatbot-input-light {
  @apply bg-gray-200 border-gray-300 text-black;
}

.chatbot-input-dark {
  @apply bg-neutral-900 border-gray-600 text-white;
}

.chatbot-icon-dark {
  @apply hover:bg-gray-700
}

.chatbot-icon-light {
  @apply hover:bg-gray-200
}

.card-transform {
  transition: transform 400ms
}

.card-transform:hover {
  transform: translateY(-8px);
}

.dark-slider .slick-prev::before,
.dark-slider .slick-next::before {
  color: #e5e7eb; 
}

.light-slider .slick-prev::before,
.light-slider .slick-next::before {
  color: #4f46e5; 
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  opacity: 1 !important;
  transform: translateY(0) !important;
  pointer-events: auto;
  animation: fade-in 0.8s ease-out forwards;
}

.fade-in-up {
  animation: fadeInUp 0.8s ease-out forwards;
}

.fade-in-down {
  animation: fadeInDown 0.8s ease-out forwards;
}

.fade-in-start {
  opacity: 0;
  transform: translateY(0); 
}

@layer components {
  .slick-list {
    overflow-x: clip;
    overflow-y: visible !important;
  }
}